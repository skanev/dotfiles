#!/usr/bin/env perl

use v5.32;
use warnings;
use utf8::all;
use experimental qw( signatures switch );
use autodie;

use lib::relative '../support/perl/lib';

use Carp qw( croak );
use Swamp::Stalker::Depot;
use Swamp::Stalker::Surveyors::RSpec;
use Swamp::Stalker::Surveyors::Rubocop;

my @surveyors = (
  Swamp::Stalker::Surveyors::RSpec::surveyor,
  Swamp::Stalker::Surveyors::Rubocop::surveyor,
);

my $depot = Swamp::Stalker::Depot->new;

my $command = $ARGV[0] // '';

if ( $command eq '' || $command eq 'stalk' ) {
  Swamp::Stalker::Consumer::devour $depot, @surveyors;
} elsif ( $command eq 'poke' ) {
  my $subcommand = $ARGV[1] // 'quickfix';

  if ( $subcommand eq 'quickfix' ) {
    my $last = $depot->get( 'last' ) // 0;
    if ( $last ) {
      say "# stalker quickfix $last->{id}";
      print $last->{result}{quickfix};
    }
  } elsif ( $subcommand eq 'stacktrace' ) {
    my ( $id, $index ) = ( $ARGV[2], $ARGV[3] );

    print $depot->get( "runs:$id" )->{result}{stacktrace}[$index];
  } elsif ( $subcommand eq 'rerun' ) {
    say $depot->get( 'last' )->{result}{rerun};
  }
} elsif ( $command eq 'dump' ) {
  my $last = $depot->get( 'last' ) // {};
  use Data::Dump qw(dump);
  dump $last;
} else {
  croak "Unknown command $ARGV[0]";
}
